// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/itinerary-cache/repository.go

// Package flight_prices is a generated GoMock package.
package flight_prices

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	models "github.com/syned13/flight-prices-api/internal/models"
)

// MockItineraryCache is a mock of ItineraryCache interface.
type MockItineraryCache struct {
	ctrl     *gomock.Controller
	recorder *MockItineraryCacheMockRecorder
}

// MockItineraryCacheMockRecorder is the mock recorder for MockItineraryCache.
type MockItineraryCacheMockRecorder struct {
	mock *MockItineraryCache
}

// NewMockItineraryCache creates a new mock instance.
func NewMockItineraryCache(ctrl *gomock.Controller) *MockItineraryCache {
	mock := &MockItineraryCache{ctrl: ctrl}
	mock.recorder = &MockItineraryCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockItineraryCache) EXPECT() *MockItineraryCacheMockRecorder {
	return m.recorder
}

// GetItineraries mocks base method.
func (m *MockItineraryCache) GetItineraries(ctx context.Context, request models.FlightSearchRequest) ([]models.Itinerary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItineraries", ctx, request)
	ret0, _ := ret[0].([]models.Itinerary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItineraries indicates an expected call of GetItineraries.
func (mr *MockItineraryCacheMockRecorder) GetItineraries(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItineraries", reflect.TypeOf((*MockItineraryCache)(nil).GetItineraries), ctx, request)
}

// SaveItineraries mocks base method.
func (m *MockItineraryCache) SaveItineraries(ctx context.Context, request models.FlightSearchRequest, itineraries []models.Itinerary) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveItineraries", ctx, request, itineraries)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveItineraries indicates an expected call of SaveItineraries.
func (mr *MockItineraryCacheMockRecorder) SaveItineraries(ctx, request, itineraries interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveItineraries", reflect.TypeOf((*MockItineraryCache)(nil).SaveItineraries), ctx, request, itineraries)
}
